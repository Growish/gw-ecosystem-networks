{  "name": "GrowishPay ecosystem for Networks",  "version": "1.0.0",  "description": "This document expose guides and the API to consume several of the payment solutions offer by GrowishPay to Networks for white label integration",  "title": "GrowishPay ecosystem for Networks",  "header": {    "title": "Basic concepts",    "content": "<iframe width=\"100%\" height=\"500\" src=\"https://www.youtube.com/embed/FU3Bh2AgrT0?rel=0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p> \n </p>\n<h3>Overview</h3>\n<p>This document is intended for Networks of travel agencies, business, tour operators, software houses, or any other type of business\nwho wants to integrate the GrowishPay payment solutions in white label through a proprietary software to their clients or partners.</p>\n<p>Let's say you are a software house that produce a CRM for several clients, and you wish to add a module to that CRM that allows your\nusers to create electronic wallets so they can accept collective payments. GrowishPay gives you a RESTful API you can integrate in\nyour CRM to allow them to Login to GrowishPay, create wallets, sync wallet operations to your fiscal system and other tools.</p>\n<p> </p>\n<h3>Preregistration</h3>\n<p>We need to know who your clients are so we can authorize them to use the GrowishPay API on your behalf. To do so, we can provide a\nUI to your clients so they can register one by one or you can provide a CVS file or any other format with all your client required\ninformation. After the registration, we send the access credentials directly to you or to your clients, this credentials are required\nto consume the API later on.</p>\n<p> </p>\n<img src=\"img/registrazione-agenzie.png\" alt=\"UI di registrazione\" height=\"350\"/>\n<p> </p>\n<p>During developing, we add some testing clients to your account.</p>\n<p> </p>\n<h3>Wallet bond</h3>\n<p>When creating a new wallet you specify an owner and a bond among other details. The bond value is expressed in eurocents and it\nrepresents a contract between your agent/agency and the owner of the wallet. All cash-in operations bellow that bond value\nare immediately transfer to the agent/agency wallet. When the collected amount surpass the bond value, all new cash-ins transactions\nstay in the owner's wallet. This is useful if your agents creates wallets to collect money for a product or service, they specified\nthe cost of the goods as the bond, so all the transaction bellow that, goes directly to your agent, all the exceeding amounts remain in the\nclient's wallet. When creating a new wallet with bond, GrowishPay sends an email to the owner with a link to accept or decline\nthe contract.</p>\n<p> </p>\n<h3>EPOS</h3>\n<p>GrowishPay provides an electronic point of sale to do cash-ins on wallets with credit card a withdrawals, for more\ndocumentation and examples; <a href=\"https://webpaymentsdev.growish.com\" target=\"_blank\">click here</a> (Italian only).</p>\n<p> </p>\n<h3>API Environments</h3>\n<p>We provide two environments - one for your live production usage, and one fully functional developing environment for testing:</p>\n<h5>DEVELOPING</h5>\n<p><strong>Base url</strong>: https://apidev.growish.com/v1</p>\n<h5>PRODUCTION</h5>\n<p><strong>Base url</strong>: https://api.growish.com/v1</p>\n<p> </p>\n<h3>API Formats</h3>\n<p><strong>Amounts</strong>: Numbers who refers to money amounts are always expressed in cents (eurocents)</p>\n<p><strong>Currencies</strong>: By default we operate always in EUROS, unless is specified differently in the contract.</p>\n<p><strong>Dates</strong>: Dates are always expressed as <em>YYYY-MM-DD</em></p>\n<p><strong>DateTimes</strong>: Dates with time are always expressed as <em>YYYY-MM-DD hh:mm:ss</em></p>\n<p> </p>\n<h3>API Response codes</h3>\n<table>\n<thead>\n<tr>\n<th>code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>200</td>\n<td>Request successful</td>\n</tr>\n<tr>\n<td>400</td>\n<td>There is at least one validation error in the body of the request  (missing parameters or constraint violation)</td>\n</tr>\n<tr>\n<td>401</td>\n<td>The token is invalid or expired</td>\n</tr>\n<tr>\n<td>403</td>\n<td>Forbidden request</td>\n</tr>\n<tr>\n<td>404</td>\n<td>Object not found or invalid query</td>\n</tr>\n<tr>\n<td>500</td>\n<td>Internal server error</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<h3>API Successful response format</h3>\n<p>For all responses with response code 200, the json object is as follows:</p>\n<pre>\n{\n  code: 200,\n  data: {},\n  message: \"OK\",\n  method: \"GET\",\n  pagination: null,\n  uri: \"https://api.growish.com/v1/:endpoint\"\n}\n</pre>\n<p>The fields <em>code</em>, <em>method</em>, and <em>uri</em> are echoes of the request.</p>\n<p><strong>message</strong>: Human friendly response, default language: Italian.</p>\n<p><strong>data</strong>: Contains the requested asset/entity.</p>\n<p><strong>pagination</strong>: When null, means all the data is available in <em>data</em> or the object does not require pagination.\nThe API calls exposed in this document do not use pagination so you can ignore this field.</p>\n<p> </p>\n<h3>API Error response format</h3>\n<p>When the response code is different from 200, the response object behaves differently according to the error code:</p>\n<p> </p>\n<h4>400: There is at least one validation error in the body of the request</h4>\n<p>The field <em>message</em> will contain an object explaining the validation error:</p>\n<pre>\n{\n \"code\": 400,\n \"message\": {\n   \"email\": {\n     \"isEmpty\":\"Il dato richiesto e non può essere vuoto\"\n   },\n   \"birthday\": {\n     \"dateInvalidDate\": \"Il valore non sembra essere una data valida\"\n   },\n   \"firstName\": {\n     \"stringLengthTooShort\": \"Questo campo deve contenere almeno 2 caratteri\"\n   }\n }\n \"data\": null,\n \"uri\": \"https://api.growish.com/v1/user/\",\n \"method\":\"POST\"\n}\n</pre>\n<p>You can iterate the <em>message</em> object and use the resulting strings as validation error messages to show in your forms,\nor if you prefer to use your own validation messages use the keys and not the values, but we don't recommend this extra step.\nIf you need a complete list of validator messages keys, please contact GrowishPay.</p>\n<p> </p>\n<h4>401: The token is invalid or expired</h4>\n<p>When you get this error, you can ignore the response object format. A 401 errors requires you to redirect your client to the\nlogin screen before continuing since the credential token is no longer valid.</p>\n<p> </p>\n<h4>403: Forbidden request</h4>\n<p>In this case, GrowishPay gives you a human friendly message in the <em>message</em> fields of the response you can simply show to your\nuser as a popup or alert. This type of error happen when the user use wrong credentials to login or try to do forbidden operations:</p>\n<pre>\n{\n  \"code\": 403,\n  \"message\": \"Credenziali di accesso non valide\",\n  \"uri\": \"https://api.growish.com/v1/auth/\",\n  \"method\": \"POST\",\n  \"missingArgument\": \"\"\n}\n</pre>\n<p><em>missingArgument</em> is part of a legacy API, you can ignore it.</p>\n<h4>404: Object not found or invalid query</h4>\n<p>Ignore the response format, the endpoint is invalid or the resource does not exist.</p>\n<h4>500: Internal server error</h4>\n<p>Ignore the response format, we advise you to try again later, or contact support if the problem persists</p>\n<p> </p>\n<h3>API Authentication</h3>\n<p>All request to the API must include the header <strong>X-App-Key</strong>, this header identifies your application with GrowishPay and allows\ncustom business logic to be implemented and it's the same across all your applications of the same brand. This value will be provided to you when you ask for API access.</p>\n<p>Your users will need to login eventually, using the <a href=\"#api-Authorization-authorization\">/auth/login</a> endpoint you send\ntheir credentials, and in case of success, the API respond with a Token valid for 30 days, you'll need to attach this token\non each private endpoint as a request header called <strong>X-Auth-Token</strong>. Store it on a safe place in your application.</p>\n<p> </p>\n<h3>CORS support</h3>\n<p>If you intend to add the GrowishPay API to a WebAPP you can do it without having to worry about cross origin requests, since\nwe support Cross-origin resource Sharing. While developing you must indicate your developing server domain so\nwe can authorize it, if you are developing locally or on a developing server with no public access you must use\na proxy.</p>\n<p> </p>\n<h3>Support</h3>\n<p>If you need help or have any doubts, please contact us at <strong>servizioclienti@growish.com</strong>.</p>\n"  },  "order": [    "login",    "logout",    "newWallet",    "newWalletTransaction"  ],  "sampleUrl": false,  "defaultVersion": "0.0.0",  "apidoc": "0.3.0",  "generator": {    "name": "apidoc",    "time": "2018-12-10T13:30:19.077Z",    "url": "http://apidocjs.com",    "version": "0.17.6"  }}
